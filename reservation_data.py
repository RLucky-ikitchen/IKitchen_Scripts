# -*- coding: utf-8 -*-
"""Reservation_Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WWyIhyxUkLI-EgMEyWC5sKPyE-_a9XEV
"""

!pip install supabase pandas python-dotenv pydantic

!mv supabase.env .env

import pandas as pd
from supabase import create_client, Client
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv(".env")

# Supabase configuration
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")
supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)

def format_phone_number(phone):
    """Format phone number to add +88 prefix"""
    if not phone or pd.isna(phone) or phone == '':
        return None

    # Convert to string and remove non-digits
    phone_str = ''.join(filter(str.isdigit, str(phone)))

    if not phone_str:
        return None

    # Add +88 prefix if not present
    if phone_str.startswith('88'):
        return f"+{phone_str}"
    return f"+88{phone_str}"

# Load and prepare data
df = pd.read_excel("/content/Reservation list update (1).xlsx", sheet_name="Update reservation Sheet")

# Clean data
df.columns = df.columns.str.strip()
df["Total Bill"] = pd.to_numeric(df["Total Bill"].str.replace(",", "").str.replace(" BDT", ""), errors='coerce')
df["Company Name"] = df["Company Name"].fillna("")
df["Mobile Number"] = df["Mobile Number"].astype(str)
df['Mobile Number'] = df['Mobile Number'].replace('nan', '')

# Process reservations
for _, row in df.iterrows():
    raw_phone = row["Mobile Number"]
    phone_number = format_phone_number(raw_phone)

    if not phone_number:
        print(f"Skipping row with invalid phone number: {raw_phone}")
        continue

    is_returning = row["Return Guest"] == "Yes"
    is_vip = row["Total Bill"] > 30000
    company_name = row["Company Name"] if ("family" not in row["Company Name"].lower() and "friend" not in row["Company Name"].lower()) else None

    # Check for existing customer
    response = supabase.table("customers").select("*").eq("phone_number", phone_number).execute()

    if response.data:
        # Update existing customer
        customer_id = response.data[0]["customer_id"]
        update_data = {
            "is_returning_customer": is_returning,
            "is_VIP": is_vip
        }
        if company_name:
            update_data["company_name"] = company_name

        supabase.table("customers").update(update_data).eq("customer_id", customer_id).execute()
    else:
        # Create new customer
        print(f"Creating new customer with phone number {phone_number}")
        supabase.table("customers").insert({
            "phone_number": phone_number,
            "name": row["Guest Name"],
            "company_name": company_name if company_name else "",
            "is_returning_customer": is_returning,
            "is_VIP": is_vip
        }).execute()

print("Update process completed!")